c_plot
c_plot <- ggplot(chrom.dat, aes(pop, rate))+
geom_boxplot(outlier.color = NA, fill = c("palegreen1", "lightcoral", "steelblue1", 'plum1'))+
labs(x = "\nPopulation", y = paste("Mutation rate of", mut,"by chromosome\n"))+
scale_color_manual("", values = c("forest green","red", "dark blue", 'magenta'))+
geom_text(data = EUR.outliers, aes(pop, rate, label = chrom), color = "blue")+
geom_point(aes(color = factor(chrom.dat$pop)), size = 2, position = position_jitter(width = 0.1))+
#geom_text(aes(chrom.dat$pop[1], 2.6e-08, label = "X chromosome", color = "red"))+
theme(axis.text.x = element_text(size = rel(1.4)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.4)),
legend.position = 'none')#legend position
c_plot
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
c_plot <- ggplot(chrom.dat, aes(pop, rate))+
geom_boxplot(outlier.color = NA, fill = c("palegreen1", "lightcoral", "steelblue1", 'plum1'))+
labs(x = "\nPopulation", y = paste("Mutation rate of", mut,"by chromosome\n"))+
scale_color_manual("", values = c("forest green","red", "dark blue", 'magenta'))+
geom_text(data = EUR.outliers, aes(pop, rate, label = chrom), color = "blue")+
geom_point(aes(color = factor(chrom.dat$pop)), size = 2, position = position_jitter(width = 0.1))+
#geom_text(aes(chrom.dat$pop[1], 2.6e-08, label = "X chromosome", color = "red"))+
theme(axis.text.x = element_text(size = rel(1.4)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.4)),
legend.position = 'none')#legend position
c_plot
c_plot <- ggplot(chrom.dat, aes(pop, rate))+
geom_boxplot(outlier.color = NA, fill = c("palegreen1", "lightcoral", "steelblue1", 'plum1'))+
labs(x = "\nPopulation", y = paste("Mutation rate of", mut,"by chromosome\n"))+
scale_color_manual("", values = c("forest green","red", "dark blue", 'magenta'))+
geom_text(data = EUR.outliers, aes(pop, rate, label = chrom), color = "blue")+
geom_point(aes(color = factor(chrom.dat$pop)), size = 2, position = position_jitter(width = 0.1))+
#geom_text(aes(chrom.dat$pop[1], 2.6e-08, label = "X chromosome", color = "red"))+
theme(axis.text.x = element_text(size = rel(1.4)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.4)),
legend.position = 'none')#legend position
c_plot
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
AFR.rates <- subset(chrom.dat, chrom.dat$pop == "African")
AFR.outliers <- subset(AFR.rates, is_outlier(AFR.rates$rate)==TRUE)
AFR.outliers
EUR.rates <- subset(chrom.dat, chrom.dat$pop == "European")
EUR.outliers <- subset(EUR.rates, is_outlier(EUR.rates$rate)==TRUE)
EAS.rates <- subset(chrom.dat, chrom.dat$pop == "East\nAsian")
EAS.outliers <- subset(EAS.rates, is_outlier(EAS.rates$rate)==TRUE)
SAS.rates <- subset(chrom.dat, chrom.dat$pop == "South\nAsian")
SAS.outliers <- subset(SAS.rates, is_outlier(SAS.rates$rate)==TRUE)
EAS.outliers
SAS.outliers
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
chrom.dat <- chrom.process.data(AFR, EUR, EAS, SAS, gw, mut)
AFR.rates <- subset(chrom.dat, chrom.dat$pop == "African")
AFR.outliers <- subset(AFR.rates, is_outlier(AFR.rates$rate)==TRUE)
EUR.rates <- subset(chrom.dat, chrom.dat$pop == "European")
EUR.outliers <- subset(EUR.rates, is_outlier(EUR.rates$rate)==TRUE)
EAS.rates <- subset(chrom.dat, chrom.dat$pop == "East\nAsian")
EAS.outliers <- subset(EAS.rates, is_outlier(EAS.rates$rate)==TRUE)
SAS.rates <- subset(chrom.dat, chrom.dat$pop == "South\nAsian")
SAS.outliers <- subset(SAS.rates, is_outlier(SAS.rates$rate)==TRUE)
c_plot <- ggplot(chrom.dat, aes(pop, rate))+
geom_boxplot(outlier.color = NA, fill = c("palegreen1", "lightcoral", "steelblue1", 'plum1'))+
labs(x = "\nPopulation", y = paste("Mutation rate of", mut,"by chromosome\n"))+
scale_color_manual("", values = c("forest green","red", "dark blue", 'magenta'))+
geom_text(data = EUR.outliers, aes(pop, rate, label = chrom), color = "blue", nudge_x = 0.2)+
geom_point(aes(color = factor(chrom.dat$pop)), size = 2, position = position_jitter(width = 0.1))+
theme(axis.text.x = element_text(size = rel(1.4)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.4)),
legend.position = 'none')#legend position
C-plot
C_plot
c_plot
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
AFR <- AFR_3mer
EUR <- EUR_3mer
EAS <- EAS_3mer
SAS <- SAS_3mer
gw <- gw_3mer_counts
mut <- "GGA->A"
chrom.dat <- chrom.process.data(AFR, EUR, EAS, SAS, gw, mut)
AFR.rates <- subset(chrom.dat, chrom.dat$pop == "African")
AFR.outliers <- subset(AFR.rates, is_outlier(AFR.rates$rate)==TRUE)
EUR.rates <- subset(chrom.dat, chrom.dat$pop == "European")
EUR.outliers <- subset(EUR.rates, is_outlier(EUR.rates$rate)==TRUE)
EAS.rates <- subset(chrom.dat, chrom.dat$pop == "East\nAsian")
EAS.outliers <- subset(EAS.rates, is_outlier(EAS.rates$rate)==TRUE)
SAS.rates <- subset(chrom.dat, chrom.dat$pop == "South\nAsian")
EAS.rates <- subset(chrom.dat, chrom.dat$pop == "East\nAsian")
EAS.outliers <- subset(EAS.rates, is_outlier(EAS.rates$rate)==TRUE)
EAS.rates
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.dat <- chrom.process.data(AFR, EUR, EAS, SAS, gw, mut)
AFR.rates <- subset(chrom.dat, chrom.dat$pop == "African")
AFR.outliers <- subset(AFR.rates, is_outlier(AFR.rates$rate)==TRUE)
EUR.rates <- subset(chrom.dat, chrom.dat$pop == "European")
EUR.outliers <- subset(EUR.rates, is_outlier(EUR.rates$rate)==TRUE)
EAS.rates <- subset(chrom.dat, chrom.dat$pop == "East\nAsian")
EAS.outliers <- subset(EAS.rates, is_outlier(EAS.rates$rate)==TRUE)
SAS.rates <- subset(chrom.dat, chrom.dat$pop == "South\nAsian")
SAS.outliers <- subset(SAS.rates, is_outlier(SAS.rates$rate)==TRUE)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/Chrom_plots.R')
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
chrom.box(AFR_3mer, EUR_3mer, EAS_3mer, SAS_3mer, gw_3mer_counts, "GGA->A")
setwd("C:\\Users\\VoightLab\\Dropbox\\SNP_rates\\Code\\jsegert_raikens1")
subpops.names <- c("TSI", "IBS", "CEU", "GBR", "FIN", "STU", "ITU", "BEB", "GIH", "PJL", "ESN", "GWD", "LWK", "MSL", "YRI", "CDX", "CHB", "CHS", "JPT", "KHV")
contexts.3mers = scan('3mer_labels.txt', what = 'character')
library(ggplot2)
library(Rtsne)
install.packages("Rtsne")
library(Rtsne)
library(tsne)
library(stats)
setwd("C:\\Users\\VoightLab\\Dropbox\\SNP_rates\\Code\\jsegert_raikens1")
contexts.3mers = scan('3mer_labels.txt', what = 'character')
contexts.3mers = scan('labels.txt', what = 'character')
X.3mer.subpop = as.matrix(read.table('X3mer_subpop_rates'))
rownames(X.3mer.subpop) = labels.3mers
contexts.3mers
X.3mer.subpop = as.matrix(read.table('X3mer_subpop_rates'))
colnames(X.3mer.subpop) <- subpops.names
tsne = Rtsne(X.3mer.subpop, perplexity = 5)
is.CtoT <- function(seq){
seq = unlist(strsplit(seq, '->'))
startBase = substring(seq[1], ceiling(length(seq[1])/2), ceiling(length(seq[1])/2))
endBase = seq[2]
if ((startBase == 'C' && endBase =='T') || (startBase == 'G' && endBase == 'A')){
return(TRUE)
}
else{
return(FALSE)
}
}
bool.to.color <- function(bool){
if (bool){
return('blue')
}
else{
return('grey')
}
}
make.heatmap <- function(data){
data = -log2(data)
heatmap.2(data, RowSideColors = unlist(lapply(unlist(lapply(row.names(data), is.CtoT)), bool.to.color)), trace = 'none', col=colorRampPalette(c('lightgoldenrod1', 'midnightblue'))(n = 1000))
}
#helper function that normalizes a vector by manhattan distance
norm <- function(vec){
u <- sum(abs(vec))
return(vec/u)
}
X.3mer.subpop = as.matrix(read.table('X3mer_subpop_rates'))
X.5mer.subpop = as.matrix(read.table('X5mer_subpop_rates'))
X.7mer.subpop = as.matrix(read.table('X7mer_subpop_rates'))
X.7mer.subpop = as.matrix(read.table('X7mer_subpop_rates'))
labels.3mers = read.table('~/Downloads/labels.txt', header = T)
labels.3mers = read.table('labels.txt', header = T)
labels.5mers = read.table('labels.5mer', header = T)
norm.3mer.subpop <- t(apply(X.3mer.subpop, 1, norm))
norm.5mer.subpop <- t(apply(X.5mer.subpop, 1, norm))
norm.7mer.subpop <- t(apply(X.7mer.subpop, 1, norm))
make.heatmap(norm.3mer.subpop)
install.packages("gplotsv3.0.1")
contexts.3mers = scan('3mer_labels.txt', what = 'character')
X.3mer.subpop = as.matrix(read.table('X3mer_subpop_rates'))
rownames(X.3mer.subpop) = labels.3mers
rownames(X.3mer.subpop) = contexts.3mers
colnames(X.3mer.subpop) <- subpops.names
make.heatmap(norm.3mer.subpop)
library(gplots)
install.packages("gplots")
library(gplots)
make.heatmap(norm.3mer.subpop)
library(gplots)
install.packages("gplots")
library(gplots)
make.heatmap(norm.3mer.subpop)
make.heatmap(norm.3mer.subpop)
View(norm.3mer.subpop)
row.names(norm.3mer.subpop) = contexts.3mers
colnames(norm.3mer.subpop) = subpops.names
make.heatmap(norm.3mer.subpop)
make.heatmap(norm.3mer.subpop)
tsne.3mer = Rtsne(norm.3mer.subpop, perplexity = 5, max_iter = 1200)
tsne.plot <-function(tsne, labels){
myplot <- ggplot(NULL, aes(tsne$Y[,1], tsne$Y[,2])) +
geom_point(aes(color = factor(labels$X1mer)),alpha=0.8) +
scale_color_manual("", values = c("dark blue", "magenta", "purple", "forest green", "#0099FF", "red"))+
geom_text(aes(tsne$Y[,1], tsne$Y[,2], label = factor(labels$Context), color = factor(labels$X1mer)), hjust = 0, nudge_x = 0.6, size = 3, check_overlap = T) +
theme_bw() +
labs(title = '3mer', x = 'tsne dimension 1', y= 'tsne dimension 2') +
theme(axis.text.x = element_text(size = rel(1.3)), axis.title.x = element_text(size = rel(1.3)), #adjust text sizes
axis.title.y = element_text(size = rel(1.3)), axis.text.y = element_text(size = rel(1.35)),
legend.text = element_text(size = rel(1.2)),
title = element_text(size = rel(1.2)))#legend position and size
return(myplot)
}
tsne.plot(tsne.3mer, labels.3mers)
tsne.3mer = Rtsne(X.3mer.subpop, perplexity = 5, max_iter = 1200)
tsne.plot(tsne.3mer, labels.3mers)
tsne.3mer = Rtsne(X.3mer.subpop, perplexity = 5, max_iter = 1200)
tsne.plot(tsne.3mer, labels.3mers)
X.5mer.subpop = as.matrix(read.table('X5mer_subpop_rates'))
norm.5mer.subpop <- t(apply(X.5mer.subpop, 1, norm))
row.names(norm.5mer.subpop) = contexts.5mers
contexts.5mers = scan('5mer_labels.txt', what = 'character')
X.5mer.subpop = as.matrix(read.table('X5mer_subpop_rates'))
rownames(X.5mer.subpop) = labels.5mers
rownames(X.5mer.subpop) = contexts.5mers
colnames(X.5mer.subpop) <- subpops.names
row.names(norm.5mer.subpop) = contexts.5mers
colnames(norm.5mer.subpop) = subpops.names
make.heatmap(norm.5mer.subpop)
View(norm.5mer.subpop)
make.heatmap(norm.5mer.subpop)
make.heatmap <- function(data){
data = -log2(data)
heatmap.2(data, trace = 'none', col=colorRampPalette(c('lightgoldenrod1', 'midnightblue'))(n = 1000))
}
make.heatmap(norm.5mer.subpop)
make.heatmap(norm.5mer.subpop[1:100,])
make.heatmap(norm.5mer.subpop[1:200,])
make.heatmap(norm.5mer.subpop[1:300,])
make.heatmap(norm.5mer.subpop[1:400,])
make.heatmap(norm.5mer.subpop[1:500,])
make.heatmap(norm.5mer.subpop[1:600,])
make.heatmap(norm.5mer.subpop[1:700,])
make.heatmap(norm.5mer.subpop[1:800,])
make.heatmap(norm.5mer.subpop[1:900,])
make.heatmap(norm.5mer.subpop0[1:100,])
make.heatmap(norm.5mer.subpop[1:1000,])
make.heatmap(norm.5mer.subpop[900:1000,])
make.heatmap(norm.5mer.subpop[900:999,])
make.heatmap(norm.5mer.subpop[900:950,])
make.heatmap(norm.5mer.subpop[950:999,])
make.heatmap(norm.5mer.subpop[975:999,])
make.heatmap(norm.5mer.subpop[990:999,])
make.heatmap(norm.5mer.subpop[975:990,])
make.heatmap(norm.5mer.subpop[975:985,])
make.heatmap(norm.5mer.subpop[975:980,])
make.heatmap(norm.5mer.subpop[980:990,])
make.heatmap(norm.5mer.subpop[980:985,])
View(norm.5mer.subpop[980:985])
View(norm.5mer.subpop[980:985,])
View(norm.5mer.subpop[983,])
make.heatmap(norm.5mer.subpop[-983,])
contexts.7mers = scan('7mer_labels.txt', what = 'character')
X.7mer.subpop = as.matrix(read.table('X7mer_subpop_rates'))
rownames(X.7mer.subpop) = contexts.7mers
colnames(X.7mer.subpop) <- subpops.names
View(X.7mer.subpop)
X.7mer.subpop$X3mer <- AFR_7mer$X3mer
View(X.7mer.subpop)
2+2
library(ggplot2)
library(Rtsne)
library(stats)
setwd("C:\\Users\\VoightLab\\Dropbox\\SNP_rates\\Code\\jsegert_raikens1")
subpops.names <- c("TSI", "IBS", "CEU", "GBR", "FIN", "STU", "ITU", "BEB", "GIH", "PJL", "ESN", "GWD", "LWK", "MSL", "YRI", "CDX", "CHB", "CHS", "JPT", "KHV")
contexts.3mers = scan('3mer_labels.txt', what = 'character')
X.3mer.subpop = as.matrix(read.table('X3mer_subpop_rates'))
rownames(X.3mer.subpop) = contexts.3mers
colnames(X.3mer.subpop) <- subpops.names
contexts.5mers = scan('5mer_labels.txt', what = 'character')
X.5mer.subpop = as.matrix(read.table('X5mer_subpop_rates'))
rownames(X.5mer.subpop) = contexts.5mers
colnames(X.5mer.subpop) <- subpops.names
contexts.7mers = scan('7mer_labels.txt', what = 'character')
X.7mer.subpop = as.matrix(read.table('X7mer_subpop_rates'))
X.7mer.subpop = as.matrix(read.table('X7mer_subpop_rates'))
rownames(X.7mer.subpop) = contexts.7mers
colnames(X.7mer.subpop) <- subpops.names
norm.3mer.subpop <- t(apply(X.3mer.subpop, 1, norm))
is.CtoT <- function(seq){
seq = unlist(strsplit(seq, '->'))
startBase = substring(seq[1], ceiling(length(seq[1])/2), ceiling(length(seq[1])/2))
endBase = seq[2]
if ((startBase == 'C' && endBase =='T') || (startBase == 'G' && endBase == 'A')){
return(TRUE)
}
else{
return(FALSE)
}
}
bool.to.color <- function(bool){
if (bool){
return('blue')
}
else{
return('grey')
}
}
make.heatmap <- function(data){
data = -log2(data)
heatmap.2(data, trace = 'none', col=colorRampPalette(c('lightgoldenrod1', 'midnightblue'))(n = 1000))
}
#helper function that normalizes a vector by manhattan distance
norm <- function(vec){
u <- sum(abs(vec))
return(vec/u)
}
norm.3mer.subpop <- t(apply(X.3mer.subpop, 1, norm))
norm.5mer.subpop <- t(apply(X.5mer.subpop, 1, norm))
norm.7mer.subpop <- t(apply(X.7mer.subpop, 1, norm))
row.names(norm.3mer.subpop) = contexts.3mers
colnames(norm.3mer.subpop) = subpops.names
make.heatmap(norm.3mer.subpop)
library(gplots)
make.heatmap(norm.3mer.subpop)
X.3mer.subpop$TSI
X.3mer.subpop[1,]
library(readr)
AFR_3mer_counts <- read_delim("C:/Users/VoightLab/Dropbox/SNP_rates/Data/singletons_excluded/3mer/AFR_3mer_counts",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(AFR_3mer_counts)
X.3mer.subpop.labels <- cbind(X.3mer.subpop, AFR_3mer_counts$X1mer)
View(X.3mer.subpop.labels)
row.names(norm.7mer.subpop) = contexts.7mers
colnames(norm.7mer.subpop) = subpops.names
library(readr)
AFR_7mer_counts <- read_delim("C:/Users/VoightLab/Dropbox/SNP_rates/Data/singletons_excluded/7mer/AFR_7mer_counts",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(AFR_7mer_counts)
View(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A"))
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A"))
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:100])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:100,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:10,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:150,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:50,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:25,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[20:25,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:20,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[1:25,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[20:25,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[100:200,])
GGA_A_7mers <- subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")
which(GGA_A_7mers[,1] == 0)
which(GGA_A_7mers[,2] == 0)
which(GGA_A_7mers[,3] == 0)
which(GGA_A_7mers[,4] == 0)
which(GGA_A_7mers[,5] == 0)
which(GGA_A_7mers[,6] == 0)
which(GGA_A_7mers[,7] == 0)
which(GGA_A_7mers[,8] == 0)
row_sub <- apply(GGA_A_7mers, 1, function(row) all(row !=0))
row_sub
row_sub == FALSE
row_sub
subset(row_sub, row_sub = FALSE)
subset(row_sub, row_sub == FALSE)
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "GGA->A")[row_sub,])
make.heatmap(subset(norm.7mer.subpop, AFR_7mer_counts$X3mer == "AAC->C")[row_sub,])
subcontext.heatmap <- function(rates, mut, labels){
data <- subset(rates, labels$X3mer == mut)
rows <- apply(data, 1, function(row) all(row != 0))
return(make.heatmap(data[rows,]))
}
subcontext.heatmap(norm.7mer.subpop, "AAC->C", AFR_7mer_counts)
rates <- norm.7mer.subpop
mut <- "AAC->C"
labels <- AFR_7mer_counts
data <- subset(rates, labels$X3mer == mut)
rows <- apply(data, 1, function(row) all(row != 0))
rows
subset(rows, rows == F)
make.heatmap(data[rows,])
data[-rows,]
data[!rows,]
View(data[!rows,])
length(data[1,])
length(data[,1])
length(data[!rows,])
rows
length(rows)
sum(rows == F)
sum(rows)
rows
mut <- "GGA->A"
data <- subset(rates, labels$X3mer == mut)
rows <- apply(data, 1, function(row) all(row != 0))
return(make.heatmap(data[rows,]))
make.heatmap(data[rows,])
mut <- "AAC->C"
data <- subset(rates, labels$X3mer == mut)
rows <- apply(data, 1, function(row) all(row != 0))
make.heatmap(data[rows,])
subcontext.heatmap(norm.7mer.subpop, "GGA->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "AGA->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ATC->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ACC->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "GAC->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "GAC->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ACA->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "AAC->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "AAC->C", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "AAC->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ACA->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "TAA->T", AFR_7mer_counts)
mut <- "AAC->C"
data <- subset(rates, labels$X3mer == mut)
rows <- apply(data, 1, function(row) all(row != 0))
view(data[rows,])
View(data[rows,])
nas <- apply(X.7mer.subpop, 1, function(row) all(row!= NA))
View(NA)
View(nas)
length(nas)
nas
nas <- apply(X.7mer.subpop, 1, function(row) all(!is.na(row)))
nas
View(X.7mer.subpop[!nas,])
View(X.7mer.subpop[nas,])
subcontext.heatmap <- function(rates, mut, labels){
data <- subset(rates, labels$X3mer == mut)
rows <- apply(data, 1, function(row) all(row != 0)&all(!is.na(row)))
return(make.heatmap(data[rows,]))
}
subcontext.heatmap(norm.7mer.subpop, "AAC->C", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "GGA->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ACC->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "AGA->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "CCC->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ATA->C", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ATC->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ACC->A", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "GAC->T", AFR_7mer_counts)
subcontext.heatmap(norm.7mer.subpop, "ACA->T", AFR_7mer_counts)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Data/singletons_excluded/by_AF/v1_m_4000")
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000", "\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000", "\t", escape_double = FALSE, trim_ws = TRUE)
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
View(EUR_AF_counts)
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000.txt", " ", escape_double = FALSE, trim_ws = TRUE)
View(EUR_AF_counts)
EUR_AF_counts <- read_delim("EUR_sortedSNPs_bins.txt", " ", escape_double = FALSE, trim_ws = TRUE)
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000.txt", " ", escape_double = FALSE, trim_ws = TRUE)
EUR_AF_bins <- read_delim("EUR_sortedSNPs_bins.txt", " ", escape_double = FALSE, trim_ws = TRUE)
View(EUR_AF_bins)
EUR_AF_bins <- read_delim("EUR_sortedSNPs_bins.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
View(EUR_AF_bins)
raw.dat <- EUR_AF_counts
bins.log <- EUR_AF_bins
colnames(raw.dat) <- bins.log$`#BIN`
View(raw.dat)
library(readr)
X3mer_mutations_ref <- read_delim("C:/Users/VoightLab/Dropbox/SNP_rates/Data/3mer_mutations_ref",
"\t", escape_double = FALSE, trim_ws = TRUE)
mut.ref <- X3mer_mutations_ref
dat <- cbind(mut.ref, raw.dat)
View(dat)
raw.dat <- cbind(mut.ref, raw.dat)
View(raw.dat)
return(rbind(raw.dat, c(NA, NA, bins.log$AVG_AF), c(NA, NA, bins.log$j)))
View(rbind(raw.dat, c(NA, NA, bins.log$AVG_AF), c(NA, NA, bins.log$j)))
process_AF_counts<- function(raw.dat, bins.log, mut.ref){
colnames(raw.dat) <- bins.log$`#BIN`
raw.dat <- cbind(mut.ref, raw.dat)
#raw.dat <- rbind(raw.dat, c(NA, NA, bins.log$AVG_AF), c(NA, NA, bins.log$j)) #messes with the formatting.  probably best to save this info separately
return(raw.dat)
}
EUR_AF_counts <- read_delim("EUR_AF_counts_m_40000.txt", " ", escape_double = FALSE, trim_ws = TRUE)
EUR_AF_bins <- read_delim("EUR_sortedSNPs_bins.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
EUR_AF_counts <- process_AF_counts(EUR_AF_counts, EUR_AF_bins, X3mer_mutations_ref)
write.table(EUR_AF_counts, "EUR_AF_3mer_counts.txt", sep = "\t", row.names = FALSE, quote = FALSE)
EAS_AF_counts <- read_delim("EAS_AF_counts_m_40000.txt", " ", escape_double = FALSE, trim_ws = TRUE)
EAS_AF_bins <- read_delim("EAS_sortedSNPs_bins.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
EAS_AF_counts <- process_AF_counts(EAS_AF_counts, EAS_AF_bins, X3mer_mutations_ref)
write.table(EAS_AF_counts, "EAS_AF_3mer_counts.txt", sep = "\t", row.names = FALSE, quote = FALSE)
SAS_AF_counts <- read_delim("SAS_AF_counts_m_40000.txt", " ", escape_double = FALSE, trim_ws = TRUE)
SAS_AF_bins <- read_delim("SAS_sortedSNPs_bins.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
SAS_AF_counts <- process_AF_counts(SAS_AF_counts, SAS_AF_bins, X3mer_mutations_ref)
write.table(SAS_AF_counts, "SAS_AF_3mer_counts.txt", sep = "\t", row.names = FALSE, quote = FALSE)
AFR_AF_counts <- read_delim("AFR_AF_counts_m_40000.txt", " ", escape_double = FALSE, trim_ws = TRUE)
AFR_AF_bins <- read_delim("AFR_sortedSNPs_bins.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
AFR_AF_counts <- process_AF_counts(AFR_AF_counts, AFR_AF_bins, X3mer_mutations_ref)
write.table(AFR_AF_counts, "AFR_AF_3mer_counts.txt", sep = "\t", row.names = FALSE, quote = FALSE)
View(EUR_AF_bins)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/SFS_plot.R')
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/SFS_plot.R')
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/SFS_plot.R')
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/SFS_plot.R')
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/SFS_plot.R')
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "ACC->T", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "CCC->T", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "ACC->T", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "AGA->A", 1)
SFS_plot_2(AFR_AF_counts, AFR_AF_bins, EUR_AF_counts, EUR_AF_bins, EAS_AF_counts, EAS_AF_bins, SAS_AF_counts, SAS_AF_bins, "GGA->A", 1)
view(EUR_AF_bins)
View(EUR_AF_bins)
