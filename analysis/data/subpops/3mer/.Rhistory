subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "ACG->A")
subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "CCG->A")
subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "TAA->T")
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "TAA->T")
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "TAA->T")
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "TAA->T")
# given: count1 and count2: pop-specific polymorphism dataframes; Mut: 3mer subcontext of interest,
# generates a scatter plot of rate for mut in population 1 by population 2
subrate.scplot <- function(count1, count2, mut){
pop1.mut <- subset(count1, count1$X3mer == mut)
pop2.mut <- subset(count2, count2$X3mer == mut)
#dat <- data.frame(cbind(pop1.mut$Context, pop1.mut$Rate, pop2.mut$Rate))
sample.size <- pop1.mut$Count + pop2.mut$Count
#lab <- subset(dat, pop1.mut$Rate/pop2.mut$Rate > 4 | pop1.mut$Rate/pop2.mut$Rate < 0.25)
p_plot <- qplot(pop1.mut$Rate, pop2.mut$Rate, xlim = c(0,1.2e-8), ylim = c(0,1.2e-8)) +
labs(x = "Rate in Pop 1", y = "Rate in Pop 2") +
theme(legend.title = element_blank(),
legend.justification= c(1,0),
legend.position=c(1,0),
axis.text=element_text(size=10),
text = element_text(size = 17))+
geom_point(aes(colour = log(base = 10, x = sample.size)), size = 3) +
scale_colour_gradient(low = "orange", high = "blue")+
geom_abline(aes(intercept=0,slope=1,show.legend = FALSE), size = 1) +
geom_text(aes(pop1.mut$Rate, pop2.mut$Rate), label = pop1.mut$Context, check_overlap = T)
return(p_plot)
}
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "TAA->T")
subrate.scplot(AFR_5mer_counts, SAS_5mer_counts, "TAA->T")
# given: count1 and count2: pop-specific polymorphism dataframes; Mut: 3mer subcontext of interest,
# generates a scatter plot of rate for mut in population 1 by population 2
subrate.scplot <- function(count1, count2, mut){
pop1.mut <- subset(count1, count1$X3mer == mut)
pop2.mut <- subset(count2, count2$X3mer == mut)
#dat <- data.frame(cbind(pop1.mut$Context, pop1.mut$Rate, pop2.mut$Rate))
sample.size <- pop1.mut$Count + pop2.mut$Count
#lab <- subset(dat, pop1.mut$Rate/pop2.mut$Rate > 4 | pop1.mut$Rate/pop2.mut$Rate < 0.25)
p_plot <- qplot(pop1.mut$Rate, pop2.mut$Rate, xlim = c(0,1.2e-8), ylim = c(0,1.2e-8)) +
labs(x = "Rate in Pop 1", y = "Rate in Pop 2") +
theme(legend.title = element_blank(),
legend.justification= c(1,0),
legend.position=c(1,0),
axis.text=element_text(size=10),
text = element_text(size = 17))+
geom_point(aes(colour = log(base = 10, x = sample.size)), size = 3) +
scale_colour_gradient(low = "orange", high = "blue")+
geom_abline(aes(intercept=0,slope=1,show.legend = FALSE), size = 1) +
geom_text(aes(pop1.mut$Rate, pop2.mut$Rate), label = pop1.mut$Context, check_overlap = T,
hjust = 1)
return(p_plot)
}
subrate.scplot(AFR_5mer_counts, SAS_5mer_counts, "TAA->T")
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "TAA->T")
subrate.scplot(SAS_7mer_counts, AFR_7mer_counts, "TAA->T")
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "TAA->T")
rate1 <- subset(AFR_5mer_counts$Rate, AFR_5mer_counts$X3mer = "TAA->T")
rate1 <- subset(AFR_5mer_counts$Rate, AFR_5mer_counts$X3mer == "TAA->T")
rate2 <- subset(SAS_5mer_counts$Rate, SAS_5mer_counts$X3mer == "TAA->T")
hist(rate1/rate2)
rate2 <- subset(SAS_7mer_counts$Rate, SAS_7mer_counts$X3mer == "TAA->T")
rate2 <- subset(SAS_7mer_counts$Rate, SAS_7mer_counts$X3mer == "TAA->T")
rate1 <- subset(AFR_7mer_counts$Rate, AFR_7mer_counts$X3mer == "TAA->T")
hist(rate1/rate2)
subrate.scplot(SAS_7mer_counts, AFR_7mer_counts, "TAA->T")
subrate.scplot(SAS_7mer_counts, AFR_7mer_counts, "TAA->T")
subrate.scplot(SAS_7mer_counts, AFR_7mer_counts, "TAA->T")
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "TAA->T")
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "GGAAA->T")
# given: count1 and count2: pop-specific polymorphism dataframes; Mut: 3mer subcontext of interest,
# generates a scatter plot of rate for mut in population 1 by population 2
subrate.scplot <- function(count1, count2, mut){
pop1.mut <- subset(count1, count1$X3mer == mut)
pop2.mut <- subset(count2, count2$X3mer == mut)
#dat <- data.frame(cbind(pop1.mut$Context, pop1.mut$Rate, pop2.mut$Rate))
sample.size <- pop1.mut$Count + pop2.mut$Count
#lab <- subset(dat, pop1.mut$Rate/pop2.mut$Rate > 4 | pop1.mut$Rate/pop2.mut$Rate < 0.25)
p_plot <- qplot(pop1.mut$Rate, pop2.mut$Rate) +
labs(x = "Rate in Pop 1", y = "Rate in Pop 2") +
theme(legend.title = element_blank(),
legend.justification= c(1,0),
legend.position=c(1,0),
axis.text=element_text(size=10),
text = element_text(size = 17))+
geom_point(aes(colour = log(base = 10, x = sample.size)), size = 3) +
scale_colour_gradient(low = "orange", high = "blue")+
geom_abline(aes(intercept=0,slope=1,show.legend = FALSE), size = 1) +
geom_text(aes(pop1.mut$Rate, pop2.mut$Rate), label = pop1.mut$Context, check_overlap = T,
hjust = 1)
return(p_plot)
}
subrate.scplot(SAS_7mer_counts, AFR_7mer_counts, "TAA->T")
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "TAA->T")
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "GCC->T")
a
b <- CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GGCCC->T")
b
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GGCCC->T")
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GCC->T")
grid.arrange(a,b,c, ncol = 3)
grid.arrange(a,b, ncol = 2)
c
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "AGC->A")
b <- CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AAGCC->A")
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AGC->A")
grid.arrange(a,b, ncol = 2)
c
grid.arrange(a,b, ncol = 2)
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AGC->A")
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "TAA->T")
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "AGC->A")
b <- CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AAGCC->A")
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AGC->A")
grid.arrange(a,b, ncol = 2)
c
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/data_wrangling/upload_subpops.R')
subrate.lplot(JPT_EAS_5mer_counts, CHS_EAS_5mer_counts, CHB_EAS_5mer_counts, KHV_EAS_5mer_counts, "AAC->C")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "AAC->C")
# given: count1 and count2: pop-specific polymorphism dataframes; Mut: 3mer subcontext of interest,
# generates a scatter plot of rate for mut in population 1 by population 2
subrate.scplot <- function(count1, count2, mut){
pop1.mut <- subset(count1, count1$X3mer == mut)
pop2.mut <- subset(count2, count2$X3mer == mut)
#dat <- data.frame(cbind(pop1.mut$Context, pop1.mut$Rate, pop2.mut$Rate))
sample.size <- pop1.mut$Count + pop2.mut$Count
#lab <- subset(dat, pop1.mut$Rate/pop2.mut$Rate > 4 | pop1.mut$Rate/pop2.mut$Rate < 0.25)
p_plot <- qplot(pop1.mut$Rate, pop2.mut$Rate) +
labs(x = "Rate in Pop 1", y = "Rate in Pop 2") +
theme(legend.title = element_blank(),
legend.justification= c(1,0),
legend.position=c(1,0),
axis.text=element_text(size=10),
text = element_text(size = 17))+
geom_point(aes(colour = log(base = 10, x = sample.size)), size = 3) +
scale_colour_gradient(low = "orange", high = "blue")+
geom_abline(aes(intercept=0,slope=1,show.legend = FALSE), size = 1) +
geom_text(aes(pop1.mut$Rate, pop2.mut$Rate), label = pop1.mut$Context, check_overlap = T,
hjust = 1)+
coord_fixed()
return(p_plot)
}
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "AAC->C")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "CAC->C")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "GAC->C")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "GAC->C")
kable(head(sig.5mers, n = 14), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
kable(head(sig.5mers, n = 10), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
kable(head(sig.5mers, n = 15), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
kable(head(sig.7mers, n = 15), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
kable(head(sig.7mers, n = 15), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
sig.7mers <- read_delim("o_significant_new_7mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Analyses/chi_squared_tests/results/ordered_p")
sig.7mers <- read_delim("o_significant_new_7mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Analyses/chi_squared_tests/results/ordered_p")
sig.3mers <- read_delim("o_significant_3mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
sig.5mers <- read_delim("o_significant_new_5mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
sig.7mers <- read_delim("o_significant_new_7mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
kable(head(sig.7mers, n = 15), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
kable(head(sig.7mers, n = 10), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
kable(head(sig.5mers, n = 10), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
library(readr)
library(knitr)
library(ggplot2)
library(dplyr)
require(reshape2)
library(gridExtra)
library(grid)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Raw_Data/singletons_excluded/")
AFR_7mer_counts <- read_delim("7mer/AFR_7mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
EUR_7mer_counts <- read_delim("7mer/EUR_7mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
EAS_7mer_counts <- read_delim("7mer/EAS_7mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
SAS_7mer_counts <- read_delim("7mer/SAS_7mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Raw_Data/singletons_excluded/")
AFR_5mer_counts <- read_delim("5mer/AFR_5mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
EUR_5mer_counts <- read_delim("5mer/EUR_5mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
EAS_5mer_counts <- read_delim("5mer/EAS_5mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
SAS_5mer_counts <- read_delim("5mer/SAS_5mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Raw_Data/singletons_excluded/")
AFR_3mer_counts <- read_delim("3mer/AFR_3mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
EUR_3mer_counts <- read_delim("3mer/EUR_3mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
EAS_3mer_counts <- read_delim("3mer/EAS_3mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
SAS_3mer_counts <- read_delim("3mer/SAS_3mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Raw_Data/gw_counts/")
gw_5mer_counts <- read_delim("gw_5mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
gw_3mer_counts <- read_delim("gw_3mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
gw_7mer_counts <- read_delim("gw_7mer_counts.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
CI.plot <- function(AFR, EUR, EAS, SAS, mut) {
mut.i <- which(AFR$Context == mut)
popnames <- c("Africa","Europe", "South\nAsia", "East\nAsia")
colors <- c("forestgreen", "darkblue", "magenta","red")
#have to do a silly workaround or R will sort popnames alphanumerically
poplabs <- factor(popnames, levels= popnames)
#cycle through pops and get counts for mut
counts <- rep(0, 4)
sums <- rep(0, 4)
pops <- list(AFR, EUR, SAS, EAS)
for (i in 1:length(pops)){
counts[i] <- pops[[i]]$Count[mut.i]
sums[i]<- sum(pops[[i]]$Count)
}
#estimate substitution probability
N.c <- AFR$context_in_genome[mut.i]
theta <- counts/N.c
L <- theta - 1.96*sqrt(theta*(1-theta)/N.c)
U <- theta + 1.96*sqrt(theta*(1-theta)/N.c)
#normalize to rate estimate; assume genome wide subsitution probability is measured without error
norm <- 1.2E-8*(sum(as.numeric(AFR$context_in_genome))/3)/sums
df <- data.frame(cbind(popnames, theta*norm, L*norm, U*norm))
plotcol <- reorder(colors, theta*norm)
CI.plot <- ggplot(df, aes(reorder(popnames, c(1,2,3,4)), theta*norm)) +
geom_point(size = 4, color = plotcol) +
geom_errorbar(aes(ymax = U*norm, ymin = L*norm), color = plotcol, size =1)+
labs(title = paste("Estimated mutation\nrate of", mut), y = NULL) + #y axis label
theme(axis.text.x = element_text(size = rel(.9)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(.9)), axis.text.y = element_text(size = rel(.9), angle = 0, hjust = 0.5), title = element_text(size = rel(.7)),
legend.position = 'none')
return(CI.plot)
}
#box plot of rate by chrom for a particular sequence context
chrom.box <- function(AFR, EUR, EAS, SAS, gw, mut){
#get data
chrom.dat <- chrom.process.data(AFR, EUR, EAS, SAS, gw, mut)
#find outliers; THIS DOESN'T WORK :(
AFR.rates <- subset(chrom.dat, chrom.dat$pop == "Africa")
AFR.outliers <- subset(AFR.rates, is_outlier(AFR.rates$rate)==TRUE)
EUR.rates <- subset(chrom.dat, chrom.dat$pop == "Europe")
EUR.outliers <- subset(EUR.rates, is_outlier(EUR.rates$rate)==TRUE)
EAS.rates <- subset(chrom.dat, chrom.dat$pop == "East\nAsia")
EAS.outliers <- subset(EAS.rates, is_outlier(EAS.rates$rate)==TRUE)
SAS.rates <- subset(chrom.dat, chrom.dat$pop == "South\nAsia")
SAS.outliers <- subset(SAS.rates, is_outlier(SAS.rates$rate)==TRUE)
#plot
c_plot <- ggplot(chrom.dat, aes(pop, rate))+
geom_boxplot(outlier.color = NA, fill = c("palegreen1",  "steelblue1", 'plum1', "lightcoral"))+
labs(x = "\nPopulation", title = paste("Mutation rate of", mut,"\nby chromosome"), y = NULL)+
scale_color_manual("", values = c("forest green", "dark blue", 'magenta', "red"))+
#add outlier labels
geom_text(data = EUR.outliers, aes(pop, rate, label = chrom), color = "dark blue", nudge_x = 0.1)+
geom_text(data = AFR.outliers, aes(pop, rate, label = chrom), color = "forest green", nudge_x = 0.1)+
geom_text(data = EAS.outliers, aes(pop, rate, label = chrom), color = "red", nudge_x = 0.1)+
geom_text(data = SAS.outliers, aes(pop, rate, label = chrom), color = "magenta", nudge_x = 0.1)+
#add points
geom_point(aes(color = factor(chrom.dat$pop)), size = 1.2, position = position_jitter(width = 0.1))+
theme(axis.text.x = element_text(size = rel(.9)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(.9)), axis.text.y = element_text(size = rel(.9)),
legend.position = 'none',
title = element_text(size = rel(.7)))#legend position
return(c_plot)
}
#helper function for ploting which formats the data for ggplot
chrom.process.data <- function(AFR, EUR, EAS, SAS, gw, mut){
#get indicies for mutation and contextAFR, EUR, EAS, SAS, gw, mut
i <- which(EUR$Context == mut)
cntxt <- substr(mut, 1, nchar(mut)-3)
i.cntxt <- which(gw$Context == cntxt)
col.e <- ncol(AFR)
col.s <- col.e-22
#trim summary columns from each input dataframe
AFR <- AFR[c(col.s: col.e)]
EUR <- EUR[c(col.s: col.e)]
EAS <- EAS[c(col.s: col.e)]
SAS <- SAS[c(col.s: col.e)]
gw <- gw[-c(1,2)]
gw_totals <- colSums(gw)
#make output dataframe for plot
dat <- data.frame(matrix(nrow = 23, ncol = 4))
colnames(dat) <- c("Africa", "Europe", "South\nAsia", "East\nAsia")
#get rates for each pop
dat$'Europe' <- t(EUR[i,]/gw[i.cntxt,]*1.2E-8*gw_totals/colSums(EUR))
dat$'Africa' <- t(AFR[i,]/gw[i.cntxt,]*1.2E-8*gw_totals/colSums(AFR))
dat$'East\nAsia' <- t(EAS[i,]/gw[i.cntxt,]*1.2E-8*gw_totals/colSums(EAS))
dat$'South\nAsia' <- t(SAS[i,]/gw[i.cntxt,]*1.2E-8*gw_totals/colSums(SAS))
#melt data to necessary format
row.names(dat) <- c('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', 'X')
dat.m <- melt(t(dat))
colnames(dat.m) <- c("pop", "chrom", "rate")
return(dat.m)
}
#helper function that returns which elements of a vector x are outliers
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
# given: count1 and count2: pop-specific polymorphism dataframes; Mut: 3mer subcontext of interest,
# generates a scatter plot of rate for mut in population 1 by population 2
subrate.scplot <- function(count1, count2, mut){
pop1.mut <- subset(count1, count1$X3mer == mut)
pop2.mut <- subset(count2, count2$X3mer == mut)
#dat <- data.frame(cbind(pop1.mut$Context, pop1.mut$Rate, pop2.mut$Rate))
sample.size <- pop1.mut$Count + pop2.mut$Count
#lab <- subset(dat, pop1.mut$Rate/pop2.mut$Rate > 4 | pop1.mut$Rate/pop2.mut$Rate < 0.25)
p_plot <- qplot(pop1.mut$Rate, pop2.mut$Rate) +
labs(x = "Rate in Pop 1", y = "Rate in Pop 2") +
theme(legend.title = element_blank(),
legend.justification= c(1,0),
legend.position=c(1,0),
axis.text=element_text(size=10),
text = element_text(size = 17))+
geom_point(aes(colour = log(base = 10, x = sample.size)), size = 3) +
scale_colour_gradient(low = "orange", high = "blue")+
geom_abline(aes(intercept=0,slope=1,show.legend = FALSE), size = 1) +
geom_text(aes(pop1.mut$Rate, pop2.mut$Rate), label = pop1.mut$Context, check_overlap = T,
hjust = 1)+
coord_fixed()
return(p_plot)
}
# given: count files for each pop and a given 3mer type,
# plots all 5mers with that 3mer subcontext on a line plot
subrate.lplot <- function(AFR, EUR, EAS, SAS, mut){
i <- which(AFR$X3mer == mut)
AFR.dat <- cbind(AFR$Rate[i],AFR$Context[i], rep("AFR", 16))
colnames(AFR.dat)<- c("Rate", "Context", "Pop")
EUR.dat <- cbind(EUR$Rate[i],EUR$Context[i], rep("EUR", 16))
colnames(EUR.dat)<- c("Rate", "Context", "Pop")
EAS.dat <- cbind(EAS$Rate[i],EAS$Context[i], rep("EAS", 16))
colnames(EAS.dat)<- c("Rate", "Context", "Pop")
SAS.dat <- cbind(SAS$Rate[i],SAS$Context[i], rep("SAS", 16))
colnames(SAS.dat)<- c("Rate", "Context", "Pop")
data <- data.frame(rbind(AFR.dat, EUR.dat, EAS.dat, SAS.dat))
myplot <- ggplot(data, aes(Pop, as.numeric(as.character(Rate)), group = Context, color = Context)) +
geom_point(size = 4) +
geom_line(size = 1.2) +
labs(y = paste("Estimated mutation rate of ", mut,"\n")) + #y axis label
theme(axis.text.x = element_text(size = rel(1.4)), axis.title.x = element_blank(), #adjust text sizes
axis.title.y = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.4)))
return(myplot)
}
setwd("C:/Users/VoightLab/Dropbox/SNP_rates/Analyses/chi_squared_tests/results/ordered_p")
sig.3mers <- read_delim("o_significant_3mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
sig.5mers <- read_delim("o_significant_new_5mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
sig.7mers <- read_delim("o_significant_new_7mers.txt",
delim ="\t", escape_double = F, trim_ws = T)
kable(head(sig.3mers, n = 14), row.names = F, digits = 600,
caption = "14 most highly significant 3mers")
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "GGA->A")
b <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "TCA->T")
c <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "ACT->T")
grid.arrange(a,b,c, ncol = 3)
d <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"GGA->A")
e <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"TCA->T")
f <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"ACT->T")
grid.arrange(d,e,f, ncol = 3)
CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,"CCC->T")
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "ATC->A")
b <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "ACC->A")
c <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "GAC->T")
grid.arrange(a,b,c, ncol = 3)
d <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"ATC->A")
e <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"ACC->A")
f <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"GAC->T")
grid.arrange(d,e,f, ncol = 3)
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "CGA->A")
b <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "ACG->T")
c <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "CGC->A")
d <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "CCG->T")
grid.arrange(a,b,c, d, ncol = 2)
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "ACA->T")
b <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"ACA->T")
grid.arrange(a,b, ncol = 2)
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "GCC->T")
b <- chrom.box(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts,
gw_3mer_counts,"GCC->T")
grid.arrange(a,b, ncol = 2)
kable(head(sig.5mers, n = 10), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "GCC->T")
b <- CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GGCCC->T")
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GCC->T")
grid.arrange(a,b, ncol = 2)
c
a <- CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "AGC->A")
b <- CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AAGCC->A")
c <- subrate.lplot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AGC->A")
grid.arrange(a,b, ncol = 2)
c
subrate.scplot(SAS_5mer_counts, AFR_5mer_counts, "TAA->T")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "TTAAA->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "TTAAA->T")
CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "TAA->T")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "TTAAC->T")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "CTAAA->T")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GTAAA->T")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GGCCC->T")
which(sig.3mers$Context == "AGC->A"
)
subrate.scplot(AFR_5mer_counts, EAS_5mer_counts, "AGC->A")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "AGC->A")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "CAC->A")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "CAC->G")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "GGC->G")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "GGC->C")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "GGC->A")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "GCC->T")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AAGCC->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AATAA->A")
CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "ATA->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "CATAA->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AATAC->A")
subrate.scplot(AFR_7mer_counts, EAS_7mer_counts, "ATA->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "CAGCC->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "ACACC->G")
CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "CAC->G")
CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "GAGCC->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GAGCC->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AGGCC->A")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "AGGGG->C")
CI.plot(AFR_3mer_counts, EUR_3mer_counts, EAS_3mer_counts, SAS_3mer_counts, "CCC->G")
CI.plot(AFR_5mer_counts, EUR_5mer_counts, EAS_5mer_counts, SAS_5mer_counts, "GGCTA->T")
kable(head(sig.7mers, n = 10), row.names = F, digits = 600,
caption = "14 most highly significant 5mers")
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/data_wrangling/upload_subpops.R')
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/subpop_plots_r02.R')
CI.plot.subpop(subpops.7mer.all, "CAAACCC->C", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "AAATAAA->A", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "CAATAAA->A", pops.all, colors.all)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/data_wrangling/upload_subpops.R')
CI.plot.subpop(subpops.5mer.all, "AATAA->A", pops.all, colors.all)
source('C:/Users/VoightLab/Dropbox/SNP_rates/Code/data_wrangling/upload_subpops.R')
CI.plot.subpop(subpops.3mer.all, "ATA->A", pops.all, colors.all)
CI.plot.subpop(subpops.5mer.all, "CATAA->A", pops.all, colors.all)
CI.plot.subpop(subpops.5mer.all, "AATAC->A", pops.all, colors.all)
CI.plot.subpop(subpops.5mer.all, "AATAG->A", pops.all, colors.all)
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "ATA->A")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "AAC->C")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "ACA->A")
CI.plot.subpop(subpops.7mer.all, "AAACAAA->A", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "TTTAAAA->T", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "ATTAAAA->T", pops.all, colors.all)
CI.plot(AFR_7mer_counts, EUR_7mer_counts, EAS_7mer_counts, SAS_7mer_counts, "ATTAAAA->T")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "TAA->T")
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "TAA->T")
CI.plot.subpop(subpops.7mer.all, "CTGCATA->G", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "ATATATA->C", pops.all, colors.all)
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "ATA->C")
CI.plot.subpop(subpops.7mer.all, "ATATATA->C", pops.all, colors.all)
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "ATA->C")
(subpops.7mer.all, "ACTAAAA->G", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "ACTAAAA->G", pops.all, colors.all)
CI.plot.subpop(subpops.7mer.all, "AGTACAG->G", pops.all, colors.all)
CI.plot(AFR_7mer_counts, EUR_7mer_counts, EAS_7mer_counts, SAS_7mer_counts, "AGTACAG->G")
CI.plot(AFR_7mer_counts, EUR_7mer_counts, EAS_7mer_counts, SAS_7mer_counts, "AGTACAG->C")
CI.plot.subpop(subpops.7mer.all, "AGTACAG->C", pops.all, colors.all)
subrate.scplot(AFR_7mer_counts, SAS_7mer_counts, "GTA->G")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "GTA->G")
# given: count1 and count2: pop-specific polymorphism dataframes; Mut: 3mer subcontext of interest,
# generates a scatter plot of rate for mut in population 1 by population 2
subrate.scplot <- function(count1, count2, mut){
pop1.mut <- subset(count1, count1$X3mer == mut)
pop2.mut <- subset(count2, count2$X3mer == mut)
#dat <- data.frame(cbind(pop1.mut$Context, pop1.mut$Rate, pop2.mut$Rate))
sample.size <- pop1.mut$Count + pop2.mut$Count
#lab <- subset(dat, pop1.mut$Rate/pop2.mut$Rate > 4 | pop1.mut$Rate/pop2.mut$Rate < 0.25)
p_plot <- qplot(pop1.mut$Rate, pop2.mut$Rate) +
labs(x = "Rate in Pop 1", y = "Rate in Pop 2") +
theme(legend.title = element_blank(),
legend.justification= c(1,0),
legend.position=c(1,0),
axis.text=element_text(size=10),
text = element_text(size = 17))+
geom_point(aes(colour = log(base = 10, x = sample.size)), size = 3) +
scale_colour_gradient(low = "orange", high = "blue")+
geom_abline(aes(intercept=0,slope=1,show.legend = FALSE), size = 1) +
geom_text(aes(pop1.mut$Rate, pop2.mut$Rate), label = pop1.mut$Context, check_overlap = T,
hjust = 1)+
coord_fixed(ratio = 1)
return(p_plot)
}
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "GTA->G")
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "GGA->A")
CI.plot.subpop(subpops.7mer.all, "AAATATA->A", pops.all, colors.all)
CI.plot.subpop(subpops.3mer.all, "AGC->A", pops.all, colors.all)
CI.plot.subpop(subpops.5mer.all, "GGCCC->T", pops.all, colors.all)
CI.plot.subpop(subpops.5mer.all, "AAGCC->A", pops.all, colors.all)
CI.plot.subpop(subpops.5mer.all, "GAGCC->A", pops.all, colors.all)
subrate.scplot(JPT_EAS_7mer_counts, KHV_EAS_7mer_counts, "AGC->A")
0.05/1536
0.05/24576
